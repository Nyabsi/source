#define FORWARDN(x,y) "/export:"#y"="#x"."#y
#define FORWARDO(x,y) "/export:#"#y"="#x".#"#y",@"#y",NONAME"

#ifdef _WIN64
#pragma comment(linker,"/export:CoCreateInstance=Explorer_CoCreateInstance")
#pragma comment(linker,"/export:CoRegisterClassObject=Explorer_CoRegisterClassObject")
#pragma comment(linker,"/export:CoRevokeClassObject=Explorer_CoRevokeClassObject")
#pragma comment(linker,"/export:IUnknown_QueryService=IUnknown_QueryServiceNEW,@176")
#pragma comment(linker,"/export:InitProcessPriv=InitProcessPriv")
#pragma comment(linker,"/export:SHGetSignature=SHGetSignature,@559,NONAME")
#pragma comment(linker,"/export:SHInvokeCommandWithFlagsAndSite=SHInvokeCommandWithFlagsAndSite,@571")
#pragma comment(linker,"/export:SHOpenRegStream2W=SHOpenRegStream2WNEW")
#pragma comment(linker,"/export:WinListInit=WinListInit,@110,NONAME")
#pragma comment(linker,"/export:WinListUninit=WinListUninit,@111,NONAME")
#else
#pragma comment(linker,"/export:CoCreateInstance=_Explorer_CoCreateInstance@20")
#pragma comment(linker,"/export:CoRegisterClassObject=_Explorer_CoRegisterClassObject@20")
#pragma comment(linker,"/export:CoRevokeClassObject=_Explorer_CoRevokeClassObject@4")
#pragma comment(linker,"/export:IUnknown_QueryService=_IUnknown_QueryServiceNEW@16,@176")
#pragma comment(linker,"/export:InitProcessPriv=_InitProcessPriv@16")
#pragma comment(linker,"/export:SHGetSignature=_SHGetSignature@12,@559,NONAME")
#pragma comment(linker,"/export:SHInvokeCommandWithFlagsAndSite=_SHInvokeCommandWithFlagsAndSite@24,@571")
#pragma comment(linker,"/export:SHOpenRegStream2W=_SHOpenRegStream2WNEW@16")
#pragma comment(linker,"/export:WinListInit=_WinListInit@0,@110,NONAME")
#pragma comment(linker,"/export:WinListUninit=_WinListUninit@0,@111,NONAME")
#endif

//dui70 - names
#pragma comment(linker,FORWARDN(DUI70,UnInitProcessPriv))
#pragma comment(linker,FORWARDN(DUI70,InitThread))
#pragma comment(linker,FORWARDN(DUI70,UnInitThread))

//ole32 - names
#pragma comment(linker,FORWARDN(OLE32,CLSIDFromString))
#pragma comment(linker,FORWARDN(OLE32,CoCreateFreeThreadedMarshaler))
//#pragma comment(linker,FORWARDN(OLE32,CoCreateInstance)) REPLACED
#pragma comment(linker,FORWARDN(OLE32,CoFreeUnusedLibraries))
#pragma comment(linker,FORWARDN(OLE32,CoGetInterfaceAndReleaseStream))
#pragma comment(linker,FORWARDN(OLE32,CoGetMalloc))
#pragma comment(linker,FORWARDN(OLE32,CoInitialize))
#pragma comment(linker,FORWARDN(OLE32,CoInitializeEx))
#pragma comment(linker,FORWARDN(OLE32,CoMarshalInterThreadInterfaceInStream))
//#pragma comment(linker,FORWARDN(OLE32,CoRegisterClassObject)) REPLACED
#pragma comment(linker,FORWARDN(OLE32,CoRegisterMessageFilter))
//#pragma comment(linker,FORWARDN(OLE32,CoRevokeClassObject)) REPLACED
#pragma comment(linker,FORWARDN(OLE32,CoTaskMemAlloc))
#pragma comment(linker,FORWARDN(OLE32,CoTaskMemFree))
#pragma comment(linker,FORWARDN(OLE32,CoUninitialize))
#pragma comment(linker,FORWARDN(OLE32,CreateBindCtx))
#pragma comment(linker,FORWARDN(OLE32,CreateStreamOnHGlobal))
#pragma comment(linker,FORWARDN(OLE32,OleInitialize))
#pragma comment(linker,FORWARDN(OLE32,OleUninitialize))
#pragma comment(linker,FORWARDN(OLE32,PropVariantClear))
#pragma comment(linker,FORWARDN(OLE32,RegisterDragDrop))
#pragma comment(linker,FORWARDN(OLE32,ReleaseStgMedium))
#pragma comment(linker,FORWARDN(OLE32,RevokeDragDrop))
#pragma comment(linker,FORWARDN(OLE32,StringFromGUID2))
//ole32 - win8
#pragma comment(linker,FORWARDN(OLE32,CoCancelCall))
#pragma comment(linker,FORWARDN(OLE32,CoDisableCallCancellation))
#pragma comment(linker,FORWARDN(OLE32,CoEnableCallCancellation))
#pragma comment(linker,FORWARDN(OLE32,CoGetApartmentType))
#pragma comment(linker,FORWARDN(OLE32,CoReleaseMarshalData))
#pragma comment(linker,FORWARDN(OLE32,CoTaskMemRealloc))
#pragma comment(linker,FORWARDN(OLE32,CoWaitForMultipleHandles))
#pragma comment(linker,FORWARDN(OLE32,CoGetClassObject))
#pragma comment(linker,FORWARDN(OLE32,CoGetObject))
#pragma comment(linker,FORWARDN(OLE32,DoDragDrop))
//slhwapi - ordinals
#pragma comment(linker,FORWARDO(SHLWAPI,8))
#pragma comment(linker,FORWARDO(SHLWAPI,9))
#pragma comment(linker,FORWARDO(SHLWAPI,10))
#pragma comment(linker,FORWARDO(SHLWAPI,12))
#pragma comment(linker,FORWARDO(SHLWAPI,16))
#pragma comment(linker,FORWARDO(SHLWAPI,24))
#pragma comment(linker,FORWARDO(SHLWAPI,154))
#pragma comment(linker,FORWARDO(SHLWAPI,156))
#pragma comment(linker,FORWARDO(SHLWAPI,157))
#pragma comment(linker,FORWARDO(SHLWAPI,158))
#pragma comment(linker,FORWARDO(SHLWAPI,163))
#pragma comment(linker,FORWARDO(SHLWAPI,164))
#pragma comment(linker,FORWARDO(SHLWAPI,165))
#pragma comment(linker,FORWARDO(SHLWAPI,168))
#pragma comment(linker,FORWARDO(SHLWAPI,172))
#pragma comment(linker,FORWARDO(SHLWAPI,174))
#pragma comment(linker,FORWARDO(SHLWAPI,175))
//#pragma comment(linker,FORWARDO(SHLWAPI,176)) IUnknown_QueryService
#pragma comment(linker,FORWARDO(SHLWAPI,177))
#pragma comment(linker,FORWARDO(SHLWAPI,178))
#pragma comment(linker,FORWARDO(SHLWAPI,184))
#pragma comment(linker,FORWARDO(SHLWAPI,193))
#pragma comment(linker,FORWARDO(SHLWAPI,197))
#pragma comment(linker,FORWARDO(SHLWAPI,199))
#pragma comment(linker,FORWARDO(SHLWAPI,204))
#pragma comment(linker,FORWARDO(SHLWAPI,212))
#pragma comment(linker,FORWARDO(SHLWAPI,213))
#pragma comment(linker,FORWARDO(SHLWAPI,215))
#pragma comment(linker,FORWARDO(SHLWAPI,217))
#pragma comment(linker,FORWARDO(SHLWAPI,219))
#pragma comment(linker,FORWARDO(SHLWAPI,225))
#pragma comment(linker,FORWARDO(SHLWAPI,236))
#pragma comment(linker,FORWARDO(SHLWAPI,237))
#pragma comment(linker,FORWARDO(SHLWAPI,240))
#pragma comment(linker,FORWARDO(SHLWAPI,256))
#pragma comment(linker,FORWARDO(SHLWAPI,270))
#pragma comment(linker,FORWARDO(SHLWAPI,278))
#pragma comment(linker,FORWARDO(SHLWAPI,279))
#pragma comment(linker,FORWARDO(SHLWAPI,292))
#pragma comment(linker,FORWARDO(SHLWAPI,388))
#pragma comment(linker,FORWARDO(SHLWAPI,413))
#pragma comment(linker,FORWARDO(SHLWAPI,433))
#pragma comment(linker,FORWARDO(SHLWAPI,437))
#pragma comment(linker,FORWARDO(SHLWAPI,439))
#pragma comment(linker,FORWARDO(SHLWAPI,460))
#pragma comment(linker,FORWARDO(SHLWAPI,467))
#pragma comment(linker,FORWARDO(SHLWAPI,476))
#pragma comment(linker,FORWARDO(SHLWAPI,478))
#pragma comment(linker,FORWARDO(SHLWAPI,479))
#pragma comment(linker,FORWARDO(SHLWAPI,484))
#pragma comment(linker,FORWARDO(SHLWAPI,487))
#pragma comment(linker,FORWARDO(SHLWAPI,502)) //x64 only
#pragma comment(linker,FORWARDO(SHLWAPI,503)) //x64 only
#pragma comment(linker,FORWARDO(SHLWAPI,509))
#pragma comment(linker,FORWARDO(SHLWAPI,510))
#pragma comment(linker,FORWARDO(SHLWAPI,548))
//#pragma comment(linker,FORWARDO(SHLWAPI,559)) SHUNIMPL
#pragma comment(linker,FORWARDO(SHLWAPI,560))
//#pragma comment(linker,FORWARDO(SHLWAPI,571)) DIFFERS
#pragma comment(linker,FORWARDO(SHLWAPI,618))
#pragma comment(linker,FORWARDO(SHLWAPI,629))
#pragma comment(linker,FORWARDO(SHLWAPI,630))
#pragma comment(linker,FORWARDO(SHLWAPI,631))
#pragma comment(linker,FORWARDO(SHLWAPI,632))
#pragma comment(linker,FORWARDO(SHLWAPI,635))
#pragma comment(linker,FORWARDO(SHLWAPI,348))
#pragma comment(linker,FORWARDO(SHLWAPI,192))
#pragma comment(linker,FORWARDO(SHLWAPI,628))
#pragma comment(linker,FORWARDO(SHLWAPI,171))
#pragma comment(linker,FORWARDO(SHLWAPI,513))
#pragma comment(linker,FORWARDO(SHLWAPI,512))
#pragma comment(linker,FORWARDO(SHLWAPI,194))
#pragma comment(linker,FORWARDO(SHLWAPI,2))
#pragma comment(linker,FORWARDO(SHLWAPI,639))
#pragma comment(linker,FORWARDO(SHLWAPI,260))
#pragma comment(linker,FORWARDO(SHLWAPI,244))
#pragma comment(linker,FORWARDO(SHLWAPI,241))
#pragma comment(linker,FORWARDO(SHLWAPI,552))
#pragma comment(linker,FORWARDO(SHLWAPI,554))
#pragma comment(linker,FORWARDO(SHLWAPI,250))
#pragma comment(linker,FORWARDO(SHLWAPI,346))
#pragma comment(linker,FORWARDO(SHLWAPI,19))


//shlwapi - names
#pragma comment(linker,FORWARDN(SHLWAPI,AssocCreate))
#pragma comment(linker,FORWARDN(SHLWAPI,AssocQueryKeyW))
#pragma comment(linker,FORWARDN(SHLWAPI,AssocQueryStringW))
#pragma comment(linker,FORWARDN(SHLWAPI,ChrCmpIW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathAppendW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathCombineW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathCommonPrefixW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathFileExistsW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathFindExtensionW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathFindFileNameW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathGetArgsW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathGetDriveNumberW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathIsDirectoryW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathIsFileSpecW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathIsNetworkPathW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathIsPrefixW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathIsRootW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathParseIconLocationW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathQuoteSpacesW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathRemoveArgsW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathRemoveBlanksW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathRemoveExtensionW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathRemoveFileSpecW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathStripPathW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathStripToRootW))
#pragma comment(linker,FORWARDN(SHLWAPI,PathMatchSpecW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHCreateStreamOnFileW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHCreateThreadRef))
#pragma comment(linker,FORWARDN(SHLWAPI,SHDeleteKeyW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHDeleteValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHGetValueW))
//#pragma comment(linker,FORWARDN(SHLWAPI,SHOpenRegStream2W))
#pragma comment(linker,FORWARDN(SHLWAPI,SHQueryInfoKeyW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHQueryValueExW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegGetBoolUSValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegGetUSValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegGetValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegQueryUSValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegOpenUSKeyW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHSetThreadRef))
#pragma comment(linker,FORWARDN(SHLWAPI,SHSetValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHStrDupA))
#pragma comment(linker,FORWARDN(SHLWAPI,SHStrDupW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrChrIW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrChrW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCmpIW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCmpNIW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCmpNW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCmpW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrDupW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrRetToBufW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrRetToStrW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrStrIW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrToIntW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrTrimW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrPBrkW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCpyNW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegCloseUSKey))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegWriteUSValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegCreateUSKeyW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHRegSetUSValueW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCatBuffW))
#pragma comment(linker,FORWARDN(SHLWAPI,wnsprintfW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCatW))
#pragma comment(linker,FORWARDN(SHLWAPI,StrCpyW))
#pragma comment(linker,FORWARDN(SHLWAPI,SHEnumValueW))
